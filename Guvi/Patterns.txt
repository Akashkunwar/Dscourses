
   _______________ PATTERNS SOLUTION USING PYTHON __________________

1.) Write a code to generate a half pyramid number pattern.

Input Description:
Given an even integer R indicates number of rows.

Where 1<=R<=100

Output Description:
Print the number pattern based on the given integer R.

Sample Input :
5
Sample Output :
12345
1234
123
12
1

____________________

def pattern(n):
    for i in range(n):
        for j in range(n-i):
            print(j+1, end = "")
        print()
n = int(input())
pattern(n)

_________________________________________________________

2.) Write a code to generate a half pyramid number pattern.

Input Description:
Given an even integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the number half pyramid pattern with the size R.

Sample Input :
5
Sample Output :
12345
4321
123
21
1
____________________

def pattern(n):
    for i in range(n):
        if i % 2 == 0:
            for j in range(n-i):
                print(j+1, end = "")
        else:
            for j in range(n-i, 0, -1):
                print(j, end = "")
        print()
n = int(input())
pattern(n)

___________________________________________________________

3.) Write a code to generate an inverted half pyramid pattern using stars.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the star inverted pyramid with the given integer R.

Sample Input :
5
Sample Output :
*  *  *  *  *
*  *  *  *
*  *  *
*  *
*
_____________________

def pattern(n):
    for i in range(n):
        a = []
        for j in range(n-i):
            a.append('*')
        print('  '.join(a))

n = int(input())
pattern(n)

_____________________________________________________________

4.) Write a code to generate a hollow rectangle using stars. 

Input Description:
Given an integer R indicates no of rows and an integer C indicates no of columns.

Where 1<=R<=100 and Where 1<=C<=100.

Output Description:
Print the hollow rectangle using stars with R rows and C columns.

Sample Input :
3 5
Sample Output :
* * * * *
*       *
* * * * *
__________________________

def pattern(r, c):
    for i in range(1, r+1):
        l = []
        if i == 1 or i == r:
            for j in range(c):
                l.append('*')
        else:
            l.append('*')
            for j in range(1, c-1):
                l.append(' ')
            l.append('*')
        print(*l)

r, c = map(int, input().split())
pattern(r, c)

____________________________________________________________

5.) Generate a hollow half pyramid pattern using numbers.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the hollow half pyramid pattern using numbers based on the given integer R.

Sample Input :
5
Sample Output :
1
12
1 3
1  4
12345
__________________________

n = int(input())
for i in range(1, n+1):
  for j in range(1, i+1):
    if(j == 1 or j == i or i == n):
      print(j, end = "")
    else:
      print(" ", end = "")
  print()

_______________________________________________________________________

6.) Write a code to generate a half pyramid pattern using numbers.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the number half pyramid pattern with the size R.

Sample Input :
5
Sample Output :
55555
4444
333
22
1
___________________________

def pattern(n):
    for i in range(n, 0, -1):
        l = []
        for j in range(i):
            l.append(str(i))
        print(''.join(l))

n = int(input())
pattern(n)

_______________________________________________________________________

7.) Write a code to generate a inverted half pyramid pattern using numbers.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100

Output Description:
Print the number half pyramid pattern with the size R.

Sample Input :
5
Sample Output :
12345
1234
123
12
1
______________________________

def pattern(n):
    for i in range(n):
        for j in range(n-i):
            print(j+1, end = "")
        print()
n = int(input())
pattern(n)

________________________________________________________________________

8.) Write a code to generate a pyramid pattern using stars from the given input size N.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the star pyramid with the given integer R.

Sample Input :
5
Sample Output :
*
* *
* * *
* * * *
* * * * *
_______________________________

def pattern(n):
    for i in range(1, n+1):
        l = []
        for j in range(i):
            l.append('*')
        print(*l)
        
n = int(input())
pattern(n)

_________________________________________________________________________

9.) Write a code to generate a half pyramid pattern using numbers.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the number half pyramid pattern with the size R.

Sample Input :
5
Sample Output :
1
22
333
4444
55555
______________________________

def pattern(n):
    for i in range(1, n+1):
        a = str(i)*i
        print(a)
        
n = int(input())
pattern(n)

________________________________________________________________________

10.) Generate a half pyramid pattern using numbers.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the half pyramid pattern based on the given integer R.

Sample Input :
5
Sample Output :
1
12
123
1234
12345
____________________________________

a = int(input())
for i in range(1,a+1):
    for j in range(1,i+1):
        print(j,end="")
    print()

__________________________________________________________________

11.) Generate a floyd's triangle.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print a floyd's triangle based on the given integer R.

Sample Input :
5
Sample Output :
1
2 3
4 5 6
7 8 9 10
11 12 13 14 15

____________________________

def pattern(n):
    a = 1
    for i in range(1, n+1):
        l = []
        for j in range(i):
            l.append(a)
            a += 1
        print(*l)

n = int(input())
pattern(n)

____________________________________________________________________

12.) Generate the following inverted character with star pattern.

bbbb*bbbb

bbb***bbb

bb*****bb

b*******b

*********

Input Description:
Input consists of a single integer that corresponds to R, the number of rows. R is always an odd number. where 1<=R<=100.

Output Description:
Print the inverted character pattern from the given input size R.

Sample Input :
5
Sample Output :
bbbb*bbbb
bbb***bbb
bb*****bb
b*******b
*********
_____________________________

def pattern(n):
    for i in range(1, n+1):
        l = []
        for j in range(n-i):
            l.append('b')
        for j in range(2*(i-1)+1):
            l.append('*')
        for j in range(n-i):
            l.append('b')
        print(''.join(l))

n = int(input())
pattern(n)

________________________________________________________________

13.) Write a code to generate a pyramid using stars.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the pyramid pattern using stars based on the given integer R.

Sample Input :
6
Sample Output :
     *
    **
   ***
  ****
 *****
******
_________________________________

def pattern(n):
    for i in range(1, n+1):
        for j in range(n - i):
            print(" ", end = "")
        for j in range(i):
            print("*", end = "")
        print()

n = int(input())
pattern(n)

_________________________________________________________________

14.) Write a code to generate the following pattern.

*********

b*******b

bb*****bb

bbb***bbb

bbbb*bbbb

Input Description:
Input consists of a single integer that corresponds to R, the number of rows. R is always an odd number.

Where 1<=R<=100.

Output Description:
Print the character with the letter 'b' pattern with the size based on the given integer R.

Sample Input :
5
Sample Output :
*********
b*******b
bb*****bb
bbb***bbb
bbbb*bbbb
_____________________________________

def pattern(n):
    for i in range(n):
        l = []
        for j in range(i):
            l.append('b')
        for j in range(2*(n-i)-1):
            l.append('*')        
        for j in range(i):
            l.append('b')
        print(''.join(l))
        
n = int(input())
pattern(n)

__________________________________________________________________

15.) Generate the following pattern.

*****

b****

bb***

bbb**

bbbb*

Input Description:
Input consists of a single integer that corresponds to n, the number of rows.

where 1<=n<=100.

Output Description:
Print the character pattern from the given input n.

Sample Input :
5
Sample Output :
*****
b****
bb***
bbb**
bbbb*
___________________________________

def pattern(n):
    for i in range(n):
        for j in range(i):
            print('b', end = "")
        for j in range(n-i):
            print('*', end = "")
        print()
        
n = int(input())
pattern(n)

___________________________________________________________________________

16.) Generate a solid rectangle using stars. 

Input Description:
Given an integer R indicates no of rows and an integer C indicates no of columns.

Where 1<=R<=100 and Where 1<=C<=100.

Output Description:
Print the rectangle using stars with R rows and C columns.

Sample Input :
3 5
Sample Output :
* * * * *
* * * * *
* * * * *
_____________________________________

def pattern(r, c):
    for i in range(1, r+1):
        l = []
        for j in range(c):
            l.append('*')
        print(*l)

r, c = map(int, input().split())
pattern(r, c)

_____________________________________________________________________

17.) Write a code to generate a square pattern using the number '1'.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the square pattern with the number '1' in R*R form based on the given integer R.

Sample Input :
5
Sample Output :
11111
11111
11111
11111
11111
______________________________

def pattern(n):
    for i in range(n):
        print('1'*n)

n = int(input())
pattern(n)

_____________________________________________________________________

18.) Write a code to generate an inverted full pyramid pattern using stars.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the star inverted full pyramid with the given integer R.

Sample Input :
5
Sample Output :
* * * * *
 * * * *
  * * *
   * *
    *
_____________________________

def pattern(n):
    for i in range(n):
        for j in range(i):
            print(' ', end = "")
        l = []
        for j in range(n-i):
            l.append('*')
        print(' '.join(l))
        
n = int(input())
pattern(n)

__________________________________________________________________

19.) Write a code to generate a hollow full pyramid pattern using stars.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the star hollow full pyramid with the given integer R.

Sample Input :
5
Sample Output :
    *
   * *
  *   *
 *     *
* * * * *
_____________________________

def pattern(n):
    for i in range(1, n+1):
        for j in range(n-i):
            print(' ', end = "")
        l = []
        if i == 1:
            l.append('*')
        elif i == n:
            for j in range(n):
                l.append('*')
        else:
            l.append('*')
            for j in range(i-2):
                l.append(' ')
            l.append('*')
        print(*l)
        
n = int(input())
pattern(n)

__________________________________________________________________

20.) In the IPL season’s valedictory function the organizers have organized for a dance program. The dance has to be performed by men along with the points of the diagonals of the square of side ‘n’ and the females along with points of the borders. The remaining positions are filled by children. You have to determine their respective positions by writing a program.

 

Input Description:
Given an integer N indicates representing the matrix (N*N).

where 1<=N<=100.

Output Description:
Print the N*N character matrix with the character F(Female), M(Male), C(Children).

Sample Input :
7
Sample Output :
M F F F F F M
F M C C C M F
F C M C M C F
F C C M C C F
F C M C M C F
F M C C C M F
M F F F F F M
____________________________

def pattern(n):
    for i in range(n):
        l = []
        for j in range(n):
            if i == j or i+j == n-1:
                l.append('M')
            elif i == 0 or j == 0 or i == n-1 or j == n-1:
                l.append('F')
            else:
                l.append('C')
        print(*l)
        
n = int(input())
pattern(n)

_________________________________________________________________

21.) Generate a hollow inverted half pyramid pattern using numbers.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the hollow Inverted half pyramid pattern using numbers based on the given integer R.

Sample Input :
5
Sample Output :
12345
1  4
1 3
12
1
_____________________________

def pattern(n):
    for i in range(n, 0, -1):
        a = ''
        if i == 1:
            a += str(i)
        elif i == n:
            for i in range(1, n+1):
                a += str(i)
        else:
            a += '1'
            a += ' '*(i-2)
            a += str(i)
        print(a)

n = int(input())
pattern(n)

__________________________________________________________________

22.) write a code to generate the following pattern.

 

**********

****bb****

***bbbb***

**bbbbbb**

*bbbbbbbb*

**bbbbbb**

***bbbb***

****bb****

**********

Input Description:
Given an even integer R indicates number of stars in first and last row.R is always an even number.

Where 2<=R<=100.

Output Description:
Print the pattern based on the given integer R.

Sample Input :
10
Sample Output :
**********
****bb****
***bbbb***
**bbbbbb**
*bbbbbbbb*
**bbbbbb**
***bbbb***
****bb****
**********
____________________________________

def pattern(n):
    for i in range(n-1):
        l = []
        for j in range(n-i):
            l.append('*')
        for j in range(2*i):
            l.append('b')
        for j in range(n-i):
            l.append('*')
        print(''.join(l))
        
    for i in range(1, n+1):
        l = []
        for j in range(i):
            l.append('*')
        for j in range(2*(n-i)):
            l.append('b')
        for j in range(i):
            l.append('*')
        print(''.join(l))
        
n = int(input())
pattern(n//2)

_________________________________________________________________

23.) Generate a number pyramid pattern.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100

Output Description:
Print the number half pyramid pattern with the size R.

Sample Input :
4
Sample Output :
1234567
12345
123
1
____________________________________

def pattern(n):
    for i in range(n, 0, -1):
        l = []
        for j in range(1, (2*i)):
            l.append(str(j))
        print(''.join(l))
        
n = int(input())
pattern(n)

__________________________________________________________________

24.) Wrrite a code to generate the following pattern.

bbbb*bbbb

bbb***bbb

bb*****bb

b*******b

*********

b*******b

bb*****bb

bbb***bbb

bbbb*bbbb

Input Description:
Given an odd integer R indicates number of rows.R is always an odd number.

where 1<=R<=100.

Output Description:
Print the character pattern based on the given input R.

Sample Input :
9
Sample Output :
bbbb*bbbb
bbb***bbb
bb*****bb
b*******b
*********
b*******b
bb*****bb
bbb***bbb
bbbb*bbbb
__________________________________

def pattern(n):
    for i in range(1, n):
        l = []
        for j in range(n-i):
            l.append('b')
        for j in range(2*(i-1)+1):
            l.append('*')
        for j in range(n-i):
            l.append('b')
        print(''.join(l))
    for i in range(n):
        l = []
        for j in range(i):
            l.append('b')
        for j in range(2*(n-i)-1):
            l.append('*')        
        for j in range(i):
            l.append('b')
        print(''.join(l))
        
n = int(input())
pattern((n+1)//2)

______________________________________________________________________

25.) Write a code to generate a half pyramid pattern using numbers.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100

Output Description:
Print the number half pyramid pattern with the size R.

Sample Input :
5
Sample Output :
5
45
345
2345
12345
_____________________________

def pattern(n):
    for i in range(n, 0, -1):
        l = []
        for j in range(i, n+1):
            l.append(str(j))
        print(''.join(l))
        
n = int(input())
pattern(n)

_______________________________________________________________________________

26.) Generate a  full pyramid using numbers.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the full pyramid using numbers based on the given integer R.

Sample Input :
5
Sample Output :
    1
   232
  34543
 4567654
567898765
_____________________________________

def pattern(n):
    for i in range(1, n+1):
        for j in range(n-i):
            print(' ', end = "")
        l = []
        for j in range(i, (2*i)):
            l.append(str(j))
        for j in range((2*i)-2, i-1, -1):
            l.append(str(j))
        print(''.join(l))
        
n = int(input())
pattern(n)

_______________________________________________________________________________

27.) Write a code to generate a triangle character pattern.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=26.

Output Description:
Print the alphabet pyramid pattern according to the given integer R.

Sample Input :
5
Sample Output :
    A
   A B
  A B C
 A B C D
A B C D E
_____________________________________

def pattern(n):
    c = 65
    l = []
    for i in range(n):
        for j in range(n-i-1):
            print(' ', end = "")
        l.append(chr(c + i))
        print(*l)
        
n = int(input())
pattern(n)

_______________________________________________________________________________

28.) Write a code to generate a half pyramid pattern using numbers.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100

Output Description:
Print the number half pyramid pattern with the size R.

Sample Input :
5
Sample Output :
12345
2345
345
45
5
_____________________________________

def pattern(n):
    for i in range(1, n+1):
        for j in range(i, n+1):
            print(j, end = "")
        print()
        
n = int(input())
pattern(n)

_______________________________________________________________________________

29.) Write a code to generate a full pyramid pattern using stars.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the star pyramid with the given integer R.

Sample Input :
5
Sample Output :
    *
   * *
  * * *
 * * * *
* * * * *
_____________________________________

def pattern(n):
    c = 65
    for i in range(1, n+1):
        for j in range(n-i):
            print(' ', end = "")
        l = []
        for j in range(i):
            l.append('*')
        print(*l)
n = int(input())
pattern(n)

_________________________________________________________________________________

30.) Write a code to generate a square pattern using numbers.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the number pattern separated with space with the size R.

Sample Input :
5
Sample Output :
5 5 5 5 5
4 5 5 5 5
3 4 5 5 5
2 3 4 5 5
1 2 3 4 5
_____________________________________

def pattern(n):
    for i in range(1, n+1):
        l = []
        for j in range(n-i+1, n+1):
            l.append(j)
        for j in range(n-i):
            l.append(n)
        print(*l)
        
n = int(input())
pattern(n)

__________________________________________________________________________________

31.) Write a code to generate a matrix number pattern.

Input Description:
Given an odd integer R indicates number of rows.R is always odd integer.

Where 1<=R<=100.

Output Description:
Print the matrix number pattern R*R based on the given integer R.

Sample Input :
5
Sample Output :
33333
32223
32123
32223
33333
____________________________________


_________________________________________________________________________________

32.) Write a code to generate an hollow rhombus Pattern using stars.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the solid rhombus using stars with the size R.

Sample Input :
4
Sample Output :
   ****
  *  *
 *  *
****
____________________________________

def pattern(n):
    for i in range(1, n+1):
        for j in range(n-i):
            print(' ', end = "")
        if i == 1 or i == n: print('*' * n)
        else:
            s = '*'
            s += ' ' * (n-2)
            s += '*'
            print(s)
n = int(input())
pattern(n)

________________________________________________________________________________________

33.) Generate the aplhabet pattern using nested loops.

Input Description:
Input consists of a string S.where length of the string (S)

Where 2<=S<=20.

Output Description:
Print the alphabet pattern from the given input string S.

Sample Input :
abcdef
Sample Output :
abcdef
b    e
c    d
d    c
e    b
fedcba
________________________________________

def pattern(s):
    n = len(s)
    print(s)
    for i in range(1, n-1):
        res = s[i]
        res += ' '*(n-2)
        res += s[n-i-1]
        print(res)
    print(s[::-1])
    
s = input()
pattern(s)

______________________________________________________________________________

34.) Generate a half diamond pattern using stars and numbers in a palindromic pattern.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the half diamond pattern using stars and numbers in a palindromic pattern based on the given integer R.

Sample Input :
3
Sample Output :
*
*1*
*121*
*12321*
*121*
*1*
*
______________________________________

def pattern(n):
    print('*')
    for i in range(1, n+1):
        l = []
        l.append('*')
        for j in range(1, i+1):
            l.append(str(j))
        for j in range(i-1, 0, -1):
            l.append(str(j))
        l.append('*')
        print(''.join(l))
    for i in range(n-1, 0, -1):
        l = []
        l.append('*')
        for j in range(1, i+1):
            l.append(str(j))
        for j in range(i-1, 0, -1):
            l.append(str(j))
        l.append('*')
        print(''.join(l))
    print('*')
    
n = int(input())
pattern(n)

______________________________________________________________________________

35.) Write a code to generate a pyramid pattern on numbers.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the pyramid number pattern based on the given integer R.

Sample Input :
5
Sample Output :
999999999
 7777777
  55555
   333
    1
______________________________________

def pattern(n):
    for i in range(n, 0, -1):
        for j in range(n-i):
            print(' ', end = "")
        for j in range((2*i)-1):
            print((2*i)-1, end = "")
        print()
        
n = int(input())
pattern(n)

_______________________________________________________________________________

36.) Write a code to generate a pyramid using stars.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the pyramid pattern using stars based on the given integer R.

Sample Input :
5
Sample Output :
*****
 ****
  ***
   **
    *
_______________________________________

def pattern(n):
    for i in range(n):
        l = []
        for j in range(i):
            l.append(' ')
        for j in range(n-i):
            l.append('*')
        print(''.join(l))
        
n = int(input())
pattern(n)

_______________________________________________________________________________

37.) Write a code to generate a left arrow pattern using stars.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the left arrow pattern based on the given integer R.

Sample Input :
5
Sample Output :
*
 *
  *
   *
*****
   *
  *
 *
*
_____________________________________

def pattern(n):
    for i in range(n-1):
        for j in range(i):
            print(' ', end = "")
        print('*')
    print('*' * n)
    for i in range(n-2, -1, -1):
        for j in range(i):
            print(' ', end = "")
        print('*')
n = int(input())
pattern(n)

________________________________________________________________________________

38.) Write a code to generate a half pyramid pattern using numbers.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the number half pyramid pattern with the size R.

Sample Input :
5
Sample Output :
1
24
135
2468
13579
_____________________________________

def pattern(n):
    o = ['1']
    e = ['2']
    for i in range(1, n+1):
        if i % 2 == 1:
            print(''.join(o))
        else:
            print(''.join(e))
        o.append(str(int(o[-1]) + 2))
        e.append(str(int(e[-1]) + 2))
            
n = int(input())
pattern(n)

_____________________________________________________________________________

39.) Write a code to generate a alphabet pyramid pattern.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=26.

Output Description:
Print the alphabet pyramid pattern according to the given integer R.

Sample Input :
5
Sample Output :
    A
   ABC
  ABCDE
 ABCDEFG
ABCDEFGHI
______________________________________________

def pattern(n):
    c = 65
    for i in range(1, n+1):
        for j in range(n-i):
            print(' ', end = "")
        for j in range(2*i - 1):
            print(chr(c+j), end = "")
        print()
n = int(input())
pattern(n)

____________________________________________________________________________


40.) Write a code to generate a solid half diamond pattern using stars.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the solid half diamond pattern based on the given integer R.

Sample Input :
5
Sample Output :
*
**
***
****
*****
****
***
**
*
_____________________________________

def pattern(n):
    for i in range(1, n+1):
        l = []
        for j in range(i):
            l.append('*')
        print(''.join(l))
    for i in range(1, n):
        l = []
        for j in range(n-i):
            l.append('*')
        print(''.join(l))
        
n = int(input())
pattern(n)

_______________________________________________________________________________

41.) Generate a hollow inverted half pyramid pattern using numbers.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the hollow inverted half pyramid pattern using numbers based on the given integer R.

Sample Input :
5
Sample Output :
    1
   1 2
  1   3
 1     4
1 2 3 4 5
_____________________________________

def pattern(n):
    for i in range(1, n+1):
        for j in range(n-i):
            print(' ', end = "")
        if i == 1:
            print(1)
        elif i == n:
            l = []
            for j in range(1, n+1):
                l.append(j)
            print(*l)
        else:
            l = ['1']
            for j in range(1, i-1):
                l.append(' ')
            l.append(str(i))
            print(*l)
n = int(input())
pattern(n)

________________________________________________________________________

42.) Write a code to generate a aplhabet pyramid pattern.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=26.

Output Description:
Print the alphabet pyramid pattern according to the given integer R.

Sample Input :
5
Sample Output :
    A
   ABA
  ABCAB
 ABCDABC
ABCDEABCD
____________________________________

def pattern(n):
    c = 65
    for i in range(1, n+1):
        for j in range(n-i):
            print(' ', end = "")
        for j in range(i):
            print(chr(c+j), end = "")
        for j in range(i-1):
            print(chr(c+j), end = "")
        print()
n = int(input())
pattern(n)

__________________________________________________________________________

43.) Write a code to generate a pyramid pattern on numbers.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the pyramid number pattern based on the given integer R.

Sample Input :
5
Sample Output :
    0
   101
  21012
 3210123
432101234
____________________________________

def pattern(n):
    for i in range(n):
        for j in range(n-i-1):
            print(' ', end = "")
            
        for j in range(i, -1, -1):
            print(j, end = "")
        for j in range(1, i+1):
            print(j, end = "")
        print()
n = int(input())
pattern(n)

________________________________________________________________________

44.) Write a code to generate a aplhabet half pyramid pattern.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=26.

Output Description:
Print the alphabet half pyramid pattern according to the given integer R.

Sample Input :
5
Sample Output :
EDCBA
EDCB
EDC
ED
E
_____________________________________

def pattern(n):
    let = 65
    for i in range(n):
        for j in range(n-1, i-1, -1):
            print(chr(let+j), end = "")
        print()
        
n = int(input())
pattern(n)

____________________________________________________________________________

45.) Write a code to generate a aplhabet pyramid pattern.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=26.

Output Description:
Print the alphabet pyramid pattern according to the given integer R.

Sample Input :
5
Sample Output :
    A
   BAB
  CBABC
 DCBABCD
EDCBABCDE
___________________________________________

def pattern(n):
    c = 65
    for i in range(n):
        for j in range(n-i-1):
            print(' ', end = "")
            
        for j in range(i, -1, -1):
            print(chr(c+j), end = "")
        for j in range(1, i+1):
            print(chr(c+j), end = "")
        print()
n = int(input())
pattern(n)

______________________________________________________________________________

46.) Write a code to generate a half pyramid pattern using numbers.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the number half pyramid pattern with the size R.

Sample Input :
5
Sample Output :
13579
3579
579
79
9
__________________________________________

def pattern(n):
    for i in range(1, (2*n), 2):
        l = []
        for j in range(i, 2*n, 2):
            l.append(str(j))
        print(''.join(l))
    
n = int(input())
pattern(n)

__________________________________________________________________________________

47.) Write a code to generate a aplhabet pyramid pattern.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=26.

Output Description:
Print the alphabet pyramid pattern according to the given integer R.

Sample Input :
5
Sample Output :
    A
   BBB
  CCCCC
 DDDDDDD
EEEEEEEEE
_______________________________________

def pattern(n):
    c = 65
    for i in range(n):
        for j in range(n-i-1):
            print(' ', end = "")
        for j in range((2*i)+1):
            print(chr(c+i), end = "")
        print()
n = int(input())
pattern(n)

________________________________________________________________________

48.) Write a code to generate a right arrow using patterns.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the right arrow pattern using stars based on the given integer R.

Sample Input :
5
Sample Output :
    *
   *
  *
 *
*****
 *
  *
   *
    *
_______________________________________

def pattern(n):
    for i in range(n-1):
        for j in range(n-i-1):
            print(' ', end = "")
        print('*')
    print('*' * n)
    for i in range(n-2, -1, -1):
        for j in range(n-i-1):
            print(' ', end = "")
        print('*')
n = int(input())
pattern(n)

______________________________________________________________________________

49.) Write a code to generate a aplhabet half pyramid pattern.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=26.

Output Description:
Print the alphabet half pyramid pattern according to the given integer R.

Sample Input :
5
Sample Output :
EEEEE
 DDDD
  CCC
   BB
    A
_______________________________________________

def pattern(n):
    for i in range(n):
        for j in range(i):
            print(' ', end = "")
        print(chr(65+n-i-1) * (n-i))
        
n = int(input())
pattern(n)

____________________________________________________________________________________

50.) Write a code to generate a butterfly pattern printing using stars.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the butterfly pattern printing using stars based on the given integer R.

Sample Input :
5
Sample Output :
*        *
**      **
***    ***
****  ****
**********
**********
****  ****
***    ***
**      **
*        *
_________________________________________

def pattern(n):
    for i in range(1, n+1):
        for j in range(i):
            print('*', end = "")
        for j in range(2*(n-i)):
            print(' ', end = "")
        for j in range(i):
            print('*', end = "")
            
        print()
    for i in range(n, 0, -1):
        for j in range(i):
            print('*', end = "")
        for j in range(2*(n-i)):
            print(' ', end = "")
        for j in range(i):
            print('*', end = "")
            
        print()
n = int(input())
pattern(n)

_____________________________________________________________________________

51.) Write a code to generate a half pyramid pattern of mulitples of the given number.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the number half pyramid pattern of multiples based on the given integer R.

Sample Input :
10
Sample Output :
1
2 4
3 6 9
4 8 12 16
5 10 15 20 25
6 12 18 24 30 36
7 14 21 28 35 42 49
8 16 24 32 40 48 56 64
9 18 27 36 45 54 63 72 81
10 20 30 40 50 60 70 80 90 100
____________________________________________________

def pattern(n):
    for i in range(1, n+1):
        l = []
        for j in range(1, i+1):
            l.append(i*j)
        print(*l)
        
n = int(input())
pattern(n)

_______________________________________________________________________________________

52.) Write a code to generate a number half pyramid pattern.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100

Output Description:
Print the number half pyramid pattern based on the given integer R.

Sample Input :
5
Sample Output :
1
2 9
3 8 10
4 7 11 14
5 6 12 13 15
___________________________________


_______________________________________________________________________________

53.) Write a code to generate an Rhombus Pattern using stars.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the solid rhombus using stars with the size of rhombus R.

Sample Input :
4
Sample Output :
   ****
  ****
 ****
****
_____________________________________

def pattern(n):
    for i in range(n):
        for j in range(n-i-1):
            print(' ', end = "")
        print('*' * n)
n = int(input())
pattern(n)

________________________________________________________________________________

54.) Write a code to generate a square pattern using numbers.

Input Description:
Given an integer R indicates number of R*2-1 rows.

Where 1<=R<=100.

Output Description:
Print the square pyramid number based on the given integer R.

Sample Input :
5
Sample Output :
1
1 4
1 4 9
1 4 9 16
1 4 9 16 25
1 4 9 16
1 4 9
1 4
1
____________________________________

def pattern(n):
    for i in range(1, n+1):
        l = []
        for j in range(1, i+1):
            l.append(j**2)
        print(*l)
    for i in range(n-1, 0, -1):
        l = []
        for j in range(1, i+1):
            l.append(j**2)
        print(*l)
n = int(input())
pattern(n)

__________________________________________________________________________

55.) Write a code to generate a half pyramid number pattern.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100

Output Description:
Print the number half pyramid pattern based on the given integer R.

Sample Input :
5
Sample Output :
1
2 4
1 3 5
2 4 6 8
1 3 5 7 9
_____________________________

def pattern(n):
    o = ['1']
    e = ['2']
    for i in range(1, n+1):
        if i % 2 == 1:
            print(*o)
        else:
            print(*e)
        o.append(str(int(o[-1]) + 2))
        e.append(str(int(e[-1]) + 2))
            
n = int(input())
pattern(n)

___________________________________________________________________________

56.) Write a code to generate a alphabet pyramid pattern.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=13.

Output Description:
Print the alphabet pyramid pattern according to the given integer R.

Sample Input :
5
Sample Output :
    A
   CCC
  EEEEE
 GGGGGGG
IIIIIIIII
___________________________

def pattern(n):
    c = 65
    for i in range(1, n+1):
        for j in range(n-i):
            print(' ', end = "")
        for j in range(2*i - 1):
            print(chr(c), end = "")
        print()
        c += 2
n = int(input())
pattern(n)

___________________________________________________________________________

57.) Write a code to generate the hollow diamond inscribed in a rectangle using stars.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100.

Output Description:
Print the hollow diamond in a rectangle using stars with the size R.

Sample Input :
5
Sample Output :
**********
****  ****
***    ***
**      **
*        *
*        *
**      **
***    ***
****  ****
**********
_________________________________

def pattern(n):
    for i in range(n, 0, -1):
        for j in range(i):
            print('*', end = "")
        for j in range(2*(n-i)):
            print(' ', end = "")
        for j in range(i):
            print('*', end = "")
            
        print()
    for i in range(1, n+1):
        for j in range(i):
            print('*', end = "")
        for j in range(2*(n-i)):
            print(' ', end = "")
        for j in range(i):
            print('*', end = "")
            
        print()
n = int(input())
pattern(n)

________________________________________________________________________________

58.) Write a code to generate the X form of a number pattern.

Input Description:
Given an integer N indicates X pattern.

Where 1<=N<=100.

Output Description:
Print the numbers in X form based on the given integer N.

Where 1<=N<=100

Sample Input :
5
Sample Output :
1       1
 2     2
  3   3
   4 4
    5
   4 4
  3   3
 2     2
1       1
_________________________________

def pattern(n):
    for i in range(1, n+1):
        for j in range(i-1):
            print(' ', end = "")
        print(i, end = "")
        for j in range(2*(n-i)-1):
            print(' ', end = "")            
        if i != n: print(i)
        else: print()
    for i in range(n-1, 0, -1):
        for j in range(i-1):
            print(' ', end = "")
        print(i, end = "")
        for j in range(2*(n-i)-1):
            print(' ', end = "")            
        if i != n: print(i)
        else: print()
            
n = int(input())
pattern(n)

___________________________________________________________________________

59.) Write a code to generate a half pyramid pattern using numbers.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100

Output Description:
Print the number half pyramid pattern with the size R.

Sample Input :
5
Sample Output :
54321
4321
321
21
1
_________________________________

def pattern(n):
    for i in range(n, 0, -1):
        for j in range(i, 0, -1):
            print(j, end = "")
        print()
n = int(input())
pattern(n)

_________________________________________________________________________________

60.) Write a code to generate a aplhabet half pyramid pattern.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=26.

Output Description:
Print the alphabet half pyramid pattern according to the given integer R.

Sample Input :
5
Sample Output :
ABCDE
 ABCD
  ABC
   AB
    A
____________________________________

def pattern(n):
    for i in range(n):
        for j in range(i):
            print(' ', end = "")
        for j in range(n-i):
            print(chr(65+j), end = "")
        print()
n = int(input())
pattern(n)

_________________________________________________________________________________

61.) Write a code to generate a pyramid of numbers and aplhabets.

Input Description:
Given an integer R indicates number of rows.

Where 1<=R<=100

Output Description:
Print the number half pyramid pattern of multiples based on the given integer R.

Sample Input :
8
Sample Output :
       A1
      AB12
     ABC123
    ABCD1234
   ABCDE12345
  ABCDEF123456
 ABCDEFG1234567
ABCDEFGH12345678
___________________________________

def pattern(n):
    c = 64
    for i in range(1, n+1):
        for j in range(n-i):
            print(' ', end = "")
        for j in range(1, i+1):
            print(chr(c+j), end = "")
        for j in range(1, i+1):
            print(j, end = "")
        print()
n = int(input())
pattern(n)

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++